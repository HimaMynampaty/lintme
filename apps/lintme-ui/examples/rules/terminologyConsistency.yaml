rules:
  terminologyConsistency:
    required: true    # Ensure terminology is used consistently
    llm_validation:
      prompt: "Detect inconsistent terminology for terms in enforced terms and other words in markdown and enforce proper usage."
      model: gemma2-9b-it # User can set "gemma2-9b-it", "whisper-large-v3", etc.  
      fix: false
    words:    # Define words that must be used in a fixed format
      - "REST API"
      - "Kubernetes Cluster"
      - "color"       # Enforce "color" everywhere (reject "colour")
    word_file: "C:/Users/Hima/Documents/Utah-edu-sem2/papers/LintMe/lintme/examples/textInputs/terminologyConsistencyList.txt"        # Match words from list and file if both are given in rule  
      

description: |
  This rule validates consistent use of terminology throughout Markdown content. Specifically, it:
    - Ensures defined terms (e.g., "Node.js", "REST API", "color") are consistently used in the exact enforced format.
    - Detects inconsistent terminology usage with the help of an AI-based validation step, identifying deviations and suggesting corrections.

error: |
  Possible failure scenarios include:
    - Inconsistent usage of defined terminology (e.g., variations such as "nodejs" instead of "Node.js", or "colour" instead of "color").
    - Detection of terminology inconsistencies by AI validation not explicitly listed but affecting readability and professionalism.
    - Issues in AI backend validation, including communication errors or invalid responses.