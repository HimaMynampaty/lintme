{
  "label": "Threshold",
  "description": "Compares computed metrics from a previous step (e.g., count or length) against threshold rules per scope and reports violations.",
  "rationale": "Lets rules assert minimum/maximum counts or lengths (per document/paragraph/line) to enforce style and quality bars.",
  "improves": [
    "limiting",
    "content-quality",
    "rule-compliance"
  ],
  "version": "1.0.0",
  "usedByRules": [
    "checkBackToTopLinkPresence",
    "consistentHeadingFormat",
    "consistentListFormat",
    "demoLinkRequiredLint",
    "detectSensitiveSecrets",
    "disallowConsecutiveDuplicateWords",
    "enforceEmojiLimit",
    "enforceNewLineAtEOF",
    "githubContributorCheck",
    "limitWordRepetition",
    "minimumReadmeLength",
    "quickStartSectionCheck",
    "richContentCheck",
    "sentenceLengthLimit",
    "tableOfContentsCheck",
    "textContrastCompliance",
    "validateLinkFormatting",
    "valueAddedLint"
  ],
  "requiresPrevious": {
    "operator": [
      "count",
      "length"
    ],
    "message": "Add a count or length step before threshold so metrics are available."
  },
  "fields": {
    "conditions": {
      "type": "object",
      "description": "Threshold rules keyed by scope. Each rule compares the actual metric against a value using the selected comparison type.",
      "minProperties": 1,
      "required": true,
      "properties": {
        "document": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "lessthan",
                "lessthanequalto",
                "greaterthan",
                "greaterthanequalto",
                "equalto"
              ]
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "type",
            "value"
          ],
          "additionalProperties": false
        },
        "paragraph": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "lessthan",
                "lessthanequalto",
                "greaterthan",
                "greaterthanequalto",
                "equalto"
              ]
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "type",
            "value"
          ],
          "additionalProperties": false
        },
        "line": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "lessthan",
                "lessthanequalto",
                "greaterthan",
                "greaterthanequalto",
                "equalto"
              ]
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "type",
            "value"
          ],
          "additionalProperties": false
        },
        "endoffile": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "lessthan",
                "lessthanequalto",
                "greaterthan",
                "greaterthanequalto",
                "equalto"
              ]
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "type",
            "value"
          ],
          "additionalProperties": false
        },
        "previousstepoutput": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "lessthan",
                "lessthanequalto",
                "greaterthan",
                "greaterthanequalto",
                "equalto"
              ]
            },
            "value": {
              "type": "number"
            }
          },
          "required": [
            "type",
            "value"
          ],
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false,
  "unevaluatedProperties": false,
  "produces": {
    "target": "threshold",
    "scopes": [
      "document",
      "paragraph",
      "line",
      "endoffile",
      "previousstepoutput"
    ],
    "contextWrites": [
      "ctx.diagnostics"
    ]
  },
  "examples": [
    {
      "operator": "threshold",
      "conditions": {
        "document": {
          "type": "greaterthanequalto",
          "value": 3
        }
      }
    },
    {
      "operator": "threshold",
      "conditions": {
        "paragraph": {
          "type": "lessthan",
          "value": 280
        },
        "line": {
          "type": "lessthanequalto",
          "value": 120
        }
      }
    }
  ]
}